from django.core.wsgi import get_wsgi_application
import os

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bitfreelas.settings')
application = get_wsgi_application()

from api.models import Skill

skills_list = [
    "Xcode",
    "IntelliJ",
    "Swift",
    "SwiftUI",
    "XML",
    "iOS Development",
    "Android Development",
    "Python",
    "JavaScript",
    "Adobe Creative Suite",
    "Excel",
    "HTML",
    "CSS",
    "Node.js",
    "Angular",
    "React",
    "Vue.js",
    "PHP",
    "Laravel",
    "Ruby",
    "Ruby on Rails",
    "Java",
    "Kotlin",
    "Spring Framework",
    "C#",
    ".NET",
    "ASP.NET",
    "TypeScript",
    "SQL",
    "MySQL",
    "PostgreSQL",
    "MongoDB",
    "Oracle Database",
    "Firebase",
    "Django",
    "Flask",
    "WordPress",
    "Drupal",
    "Joomla",
    "Magento",
    "Shopify",
    "WooCommerce",
    "Webflow",
    "Wix",
    "Squarespace",
    "Bootstrap",
    "Material-UI",
    "Foundation",
    "SASS",
    "LESS",
    "Stylus",
    "Git",
    "Docker",
    "Kubernetes",
    "Jenkins",
    "AWS",
    "Azure",
    "Google Cloud Platform",
    "DevOps",
    "SEO",
    "SEM",
    "PPC",
    "Google Analytics",
    "Google Ads",
    "Facebook Ads",
    "Content Marketing",
    "Email Marketing",
    "Video Editing",
    "Adobe Premiere Pro",
    "Adobe After Effects",
    "Final Cut Pro",
    "DaVinci Resolve",
    "Avid Media Composer",
    "Motion Graphics",
    "3D Modeling",
    "Blender",
    "Autodesk 3ds Max",
    "Autodesk Maya",
    "Cinema 4D",
    "ZBrush",
    "UX Design",
    "UI Design",
    "Sketch",
    "Figma",
    "InVision",
    "Balsamiq",
    "Wireframing",
    "Prototyping",
    "Adobe XD",
    "Adobe Illustrator",
    "Adobe Photoshop",
    "Adobe InDesign",
    "Lightroom",
    "Affinity Designer",
    "Affinity Photo",
    "CorelDRAW",
    "GIMP",
    "Inkscape",
    "Canva",
    "QuarkXPress",
    "Microsoft Office Suite",
    "Microsoft Word",
    "Microsoft PowerPoint",
    "Microsoft Access",
    "Microsoft Outlook",
    "Microsoft Teams",
    "Microsoft Project",
    "Microsoft Visio",
    "Google Workspace",
    "Google Docs",
    "Google Sheets",
    "Google Slides",
    "Google Forms",
    "Google Drive",
    "Slack",
    "Trello",
    "Asana",
    "Basecamp",
    "Monday.com",
    "Smartsheet",
    "Zoom",
    "Salesforce",
    "HubSpot",
    "Zoho CRM",
    "Pipedrive",
    "Marketo",
    "Mailchimp",
    "Constant Contact",
    "Infusionsoft",
    "AutoCAD",
    "Revit",
    "SketchUp",
    "Civil 3D",
    "Rhino",
    "ArchiCAD",
    "Fusion 360",
    "SolidWorks",
    "Inventor",
    "CATIA",
    "MATLAB",
    "R",
    "SAS",
    "SPSS",
    "Stata",
    "Tableau",
    "Power BI",
    "QlikView"
]

for skill_name in skills_list:
    skill, created = Skill.objects.get_or_create(name=skill_name)
    if created:
        print(f'Skill "{skill_name}" criada com sucesso.')
    else:
        print(f'Skill "{skill_name}" j√° existe.')
